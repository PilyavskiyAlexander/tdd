<?php

namespace Tests\Feature;

use Illuminate\Support\Facades\Auth;
use Tests\TestCase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Contracts\Auth\Authenticatable;

class ReadThreadsTest extends TestCase
{
    use DatabaseMigrations;

    protected $thread;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->thread = factory('App\Thread')->create();
    }

    /**
     * @return void
     */
    public function test_connection()
    {
        $response = $this->get('/threads');

        $response->assertStatus(200);
    }

    public function test_user_can_see_threads()
    {
        $response = $this->get('/threads');
        $response->assertSee($this->thread->title);
    }

    public function test_user_can_see_single_thread()
    {
        $this->get(route('show_thread', ['channel' => $this->thread->channel->name, 'thread' => $this->thread->id]))
             ->assertSee($this->thread->title);
    }

    public function test_that_user_can_read_replies_that_are_with_tread()
    {
        factory('App\Reply')->create(['thread_id' => $this->thread->id]);

        $response = $this->get(route('show_thread', ['channel' => $this->thread->channel->name, 'thread' => $this->thread->id]));

        $response->assertSee($this->thread->repliers->first()->body);
    }

    public function test_that_user_can_filter_threads_according_to_a_channel()
    {
        $channel = factory('App\Channel')->create();
        $threadInChannel = factory('App\Thread')->create(['channel_id' => $channel->id]);
        $threadNotInChannel = factory('App\Thread')->create();

        $this->get(route('show_channel', $channel->name))
                ->assertSee($threadInChannel->title)
                ->assertDontSee($threadNotInChannel->title);
    }

    public function test_than_user_can_filter_threads_by_any_user()
    {

        $this->actingAs(factory('App\User')->create());

        $thread = factory('App\Thread')->create(['user_id' => auth()->id()]);
        $threadNotUser = factory('App\Thread')->create();

        $this->get(route('user_threads', auth()->id()))
                ->assertSee($thread->title)
                ->assertDontSee($threadNotUser->title);
    }
}
